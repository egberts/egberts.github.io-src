# All Pelican-only classes (unless prepended otherwise)
# Capitalized are ENVIRONMENT variables to be defined in pelicanconf.py
# Parenthesized names are Python function/module

run()
  SITEURL
  PATH
  THEME

run.__init__()
  SITEURL -> localsiteurl
  get_generator_classes()
    TEMPLATE_PAGES
    OUTPUT_SOURCES
    generator_classes = [
      ArticlesGenerator
      PageGenerators
      TemplatePagesGenerator
      SitemapGenerator
      alias.AliasGenerator
      StaticGenerator
    ]
  <listcomp>.__init__()
    ArticlesGenerator.__init__()
      CachingGenerator.__init__()
        CONTENT_CACHING_LAYER
        CACHE_CONTENT
        LOAD_CACHE_CONTENT
        Generator.__init__()
          THEME_TEMPLATES_OVERRIDES
          JINJA_ENVIRONMENT
          JINJA_FILTERS
    SitemapGenerator.__init__()
      SITEURL
      TIMEZONE
      SITEMAP
  DELETE_OUTPUT_DIRECTORY
  OUTPUT_PATH
  OUTPUT_RETENTION
  ArticlesGenerator # class
    get_file()
      IGNORE_FILES
    generate_context()
      ARTICLE_PATH
      ARTICLE_EXCLUDES
      add_failed_source_path()/DEBUG
      Readers.read_file()
        RstReader.read()
          DEFAULT_LANG
          _get_publisher()
            Publisher.publisher()
              Readers.read()
                Readers.parse()
                  RstReader.parse()
                    RstStateMachine.run()
                      StateMachineWS.run()
                        StateMachine.run()
                          StateMachine.check_line()
                            Text(RST).underline()
                              RSTState.section()
                                RSTState(StateWS).new_subsection()
                                  RSTState(StateWS).nested_parse()
                                    NestedStateMachine(StateMachineWS).run()
                                      ... 16 layers deep
                                      CodeInclude.run()
        Markdownreader.read()
        default_metadata()
          DEFAULT_METADATA
          DEFAULT_CATEGORY
          DEFAULT_DATE
          METADATA_PROCESSORS = [
            tags, date, modified, status, category, author, authors, slug ]
        path_metadata()
          DEFAULT_DATE
          EXTRA_PATH_METADATA
        parse_path_metadata()
          FILENAME_METADATA
          PATH_METADATA
          USE_FOLDER_AS_CATEGORY
        TYPOGRIFY
        Article.__init__()
          WITH_FUTURE_DATES
      add_source_paths()
      add_static_links()
  PagesGenerator.generate_context() # class
    get_file()
      IGNORE_FILES
    generate_content_generators()
      PAGE_PATHS
      PAGE_EXCLUDES
      Readers.read_file()
        readers.MarkdownReader()
        default_metadata()
          DEFAULT_METADATA
          DEFAULT_CATEGORY
          DEFAULT_DATE
          METADATA_PROCESSORS = [
            tags, date, modified, status, category, author, authors, slug ]
        path_metadata()
          DEFAULT_DATE
          EXTRA_PATH_METADATA
        parse_path_metadata()
          FILENAME_METADATA
          PATH_METADATA
          USE_FOLDER_AS_CATEGORY
        TYPOGRIFY
        Content.__init__()
          WITH_FUTURE_DATES
          AUTHOR
          DEFAULT_LANG
          SLUGIFY_SOURCE
          SLUG_REGEX_SUBSTITUTIONS
          DATE_FORMATS
          DEFAULT_DATE_FORMAT
          TIMEZONE
          Signal.send()
      add_source_paths()
      add_static_links()
  StaticGenerator # class
    get_file()
      IGNORE_FILES
    generate_context()
      STATIC_PATHS
      STATIC_EXCLUDES
      STATIC_EXCLUDE_SOURCES
      Readers.read_file()
        readers.MarkdownReader()
        default_metadata()
          DEFAULT_METADATA
          DEFAULT_CATEGORY
          DEFAULT_DATE
          METADATA_PROCESSORS = [
            tags, date, modified, status, category, author, authors, slug ]
        path_metadata()
          DEFAULT_DATE
          EXTRA_PATH_METADATA
        parse_path_metadata()
          FILENAME_METADATA
          PATH_METADATA
          USE_FOLDER_AS_CATEGORY
        TYPOGRIFY
        Content.__init__()
          WITH_FUTURE_DATES
          AUTHOR
          DEFAULT_LANG
          SLUGIFY_SOURCE
          SLUG_REGEX_SUBSTITUTIONS
          DATE_FORMATS
          DEFAULT_DATE_FORMAT
          TIMEZONE
          Signal.send()
      add_source_paths()
      add_static_links()
    ArticlesGenerator.refresh_metadata_intersite()
      Content.refresh_metadata_intersite()
        FORMATTED_FIELDS
    Signal.send()
  ArticlesGenerator.generate_output()
    generate_feeds()
      FEED_ATOM
      FEED_ATOM_URL
      FEED_RSS
      FEED_RSS_URL
      FEED_ALL_ATOM
      FEED_ALL_RSS
      ARTICLE_ORDER_BY
      FEED_ALL_ATOM_URL
      FEED_ALL_RSS_URL
      CATEGORY_FEED_ATOM
      CATEGORY_FEED_ATOM_URL
      CATEGORY_FEED_RSS
      CATEGORY_FEED_RSS_URL
      AUTHOR_FEED_ATOM
      AUTHOR_FEED_ATOM_URL
      AUTHOR_FEED_RSS
      AUTHOR_FEED_RSS_URL
      TAG_FEED_ATOM
      TAG_FEED_ATOM_URL
      TAG_FEED_RSS
      TAG_FEED_RSS_URL
      TRANSLATION_FEED_ATOM
      TRANSLATION_FEED_ATOM_URL
      TRANSLATION_FEED_RSS
      TRANSLATION_FEED_RSS_URL
    generate_pages()
      RELATIVE_URLS
      generate_articles()
        Signal.send()
        get_template()
          TEMPLATE_EXTENSIONS
          template_extension
        write_file()
          is_selected_for_writing()
          PAGINATED_TEMPLATES
          DEFAULT_PAGINATION
      generate_period_archives()
        YEAR_ARCHIVE_SAVE_AS
        MONTH_ARCHIVE_SAVE_AS
        DAY_ARCHIVE_SAVE_AS
        YEAR_ARCHIVE_URL
        MONTH_ARCHIVE_URL
        DAY_ARCHIVE_URL
        get_template()
          TEMPLATE_EXTENSIONS
          template_extension
      generate_direct_templates()
        DIRECT_TEMPLATES
        get_template()
          TEMPLATE_EXTENSIONS
        INDEX_SAVE_AS
        INDEX_URL
        CATEGORIES_SAVE_AS
        CATEGORIES_URL
        TAGS_SAVE_AS
        TAGS_URL
        ARCHIVES_SAVE_AS
        ARCHIVES_URL
        AUTHORS_SAVE_AS
        AUTHORS_URL
        write_file()
          is_selected_for_writing()
          PAGINATED_TEMPLATES
          DEFAULT_PAGINATION
      generate_tags()
        get_template()
          TEMPLATE_EXTENSIONS
        write_file()
          is_selected_for_writing()
          PAGINATED_TEMPLATES
          DEFAULT_PAGINATION
      generate_categories()
        get_template()
          TEMPLATE_EXTENSIONS
        write_file()
          is_selected_for_writing()
          PAGINATED_TEMPLATES
          DEFAULT_PAGINATION
      generate_authors()
        get_template()
          TEMPLATE_EXTENSIONS
        write_file()
          is_selected_for_writing()
          PAGINATED_TEMPLATES
          DEFAULT_PAGINATION
      generate_drafts()
        get_template()
          TEMPLATE_EXTENSIONS
        write_file()
          is_selected_for_writing()
          PAGINATED_TEMPLATES
          DEFAULT_PAGINATION
    Signal.article_writer_finalized()
  PagesGenerator.generate_output()
    RELATIVE_URLS
    get_template()
      TEMPLATE_EXTENSIONS
    write_file()
      is_selected_for_writing()
      PAGINATED_TEMPLATES
      DEFAULT_PAGINATION
    Signal.article_writer_finalized()
  TemplatePagesGenerator.generate_output()
    RELATIVE_URLS
    get_template()
      TEMPLATE_EXTENSIONS
    write_file()
      is_selected_for_writing()
      PAGINATED_TEMPLATES
      DEFAULT_PAGINATION
    Signal.article_writer_finalized()
  SitemapGenerator.generate_output()
    TEMPLATE_PAGES  (i.e., cover_page.html)
    write_file()
      is_selected_for_writing()
      PAGINATED_TEMPLATES
      DEFAULT_PAGINATION
    Signal.article_writer_finalized()
  StaticGenerator.generate_output()
    THEME_STATIC_PATHS
    THEME_STATIC_DIR
    IGNORE_FILES
    utils.copy()
    write_file()
      is_selected_for_writing()
      PAGINATED_TEMPLATES
      DEFAULT_PAGINATION
    Signal.article_writer_finalized()

tag_cloud
  TAG_CLOUD_STEPS
  TAG_CLOUD_MAX_ITEMS
  TAG_CLOUD_SORTING
  TAG_CLOUD_BADGE
